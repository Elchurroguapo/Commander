
sudo pacman -S nginx-mainline
sudo systemctl enable --now nginx
sudo pacman -S mariadb
sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
sudo systemctl enable --now mariadb

sudo mysql_secure_installation
[Enter]
[Enter]
n
[Enter]
[Enter]
[Enter]
sudo mysql -u root
create database nextcloud;
create user 'netrunner'@'localhost' identified by '1221';
grant all privileges on nextcloud.* to 'netrunner'@'localhost' identified by '1221';
flush privileges;
exit

sudo pacman -S php php-fpm php-gd php-intl
sudo nano /etc/nginx/nginx.conf (php$...)
-root /usr/share/nginx/html
-fastcgi_pass unix:/run/php-fpm/php-fpm.sock
-fastcgi_param $document_root$...
uncomment 'location, through include'

sudo systemctl reload nginx
sudo systemctl enable --now php-fpm

sudo vim /etc/php/php.ini
'seacrh memory)limit'
memory_limit = 512M
'search ;extension='
uncomment
-gd,intl,mysqli,pdo_mysql,zip

sudo pacman -S nextcloud
sudo chown -R http:http /usr/share/webapps/nextcloud/
sudo mkdir /etc/nginx/conf.d
sudo vim /etc/nginx/conf.d/nextcloud.conf

---COPY/PASTE----
server {
    listen 80;
    server_name localhost;

    # Add headers to serve security related headers
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;

    # Path to the root of your installation
    root /usr/share/webapps/nextcloud/;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # The following 2 rules are only needed for the user_webfinger app.
    # Uncomment it if you're planning to use this app.
    #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
    #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json
    # last;

    location = /.well-known/carddav {
        return 301 $scheme://$host/remote.php/dav;
    }
    location = /.well-known/caldav {
       return 301 $scheme://$host/remote.php/dav;
    }

    location ~ /.well-known/acme-challenge {
      allow all;
    }

    # set max upload size
    client_max_body_size 512M;
    fastcgi_buffers 64 4K;

    # Disable gzip to avoid the removal of the ETag header
    gzip off;

    # Uncomment if your server is build with the ngx_pagespeed module
    # This module is currently not supported.
    #pagespeed off;

    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;

    location / {
       rewrite ^ /index.php$uri;
    }

    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
       deny all;
    }
    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
       deny all;
     }

    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
       include fastcgi_params;
       fastcgi_split_path_info ^(.+\.php)(/.*)$;
       fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
       fastcgi_param PATH_INFO $fastcgi_path_info;
       #Avoid sending the security headers twice
       fastcgi_param modHeadersAvailable true;
       fastcgi_param front_controller_active true;
       fastcgi_pass unix:/run/php-fpm/php-fpm.sock;
       fastcgi_intercept_errors on;
       fastcgi_request_buffering off;
    }

    location ~ ^/(?:updater|ocs-provider)(?:$|/) {
       try_files $uri/ =404;
       index index.php;
    }

    # Adding the cache control header for js and css files
    # Make sure it is BELOW the PHP block
    location ~* \.(?:css|js)$ {
        try_files $uri /index.php$uri$is_args$args;
        add_header Cache-Control "public, max-age=7200";
        # Add headers to serve security related headers (It is intended to
        # have those duplicated to the ones above)        
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        # Optional: Don't log access to assets
        access_log off;
   }

   location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ {
        try_files $uri /index.php$uri$is_args$args;
        # Optional: Don't log access to other assets
        access_log off;
   }
}
sudo vim /etc/nginx/nginx.conf
-http
  include /etc/nginx/conf.d/*.conf;
sudo vim /etc/php/php-fpm.d/www.conf
search 'env[PATH]'
uncomment [PATH,TMP]

sudo mkdir /var/nextcloud
sudo chown http:http /var/nextcloud
sudo chmod 750 /var/nextcloud
sudo mkdir -p /usr/share/webapps/nextcloud/data
sudo chown -R http:http /usr/share/webapps/nextcloud/{apps,data}
sudo chmod 750 /usr/share/webapps/nextcloud/{apps,data}

sudo systemctl edit php-fpm.service

[Service]
ReadWritePaths = /usr/share/webapps/nextcloud/apps
ReadWritePaths = /usr/share/webapps/nextcloud/data
ReadWritePaths = /etc/webapps/nextcloud/config
ReadWritePaths = /var/nextcloud

sudo systemctl restart php-fpm
sudo systemctl restart nginx

localhost [adminpage]
data folder = /var/nextcloud
database user = netrunner
database passwd = 122100
database name = nextcloud
database end = nextcloud

ip a
sudo vim /usr/share/webapps/nextcloud/config/config.php
-0 => 'localhost'
-1 => 'Static IPv4',

sudo mkdir /etc/pacman.d/hooks
sudo vim /etc/pacman.d/hooks/nextcloud.hook

[Trigger]
Operation=Install
Operation=Upgrade
Type=Package
Target=nextcloud
Target=nextcloud-app-*

[Action]
Description=Update Nextcloud Installation
When=PostTransaction
Exec=/usr/bin/runuser -u http -- /usr/bin/php /usr/share/webapps/nextcloud/occ upgrade

